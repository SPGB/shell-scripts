#!/bin/bash
# Upscales a video into vp9
# Requires ffpb (https://github.com/althonos/ffpb)

# Argument 1: video url
URL=$1
DEFAULTOUTPUT='output.webm'
OUTPUT=${2:-$DEFAULTOUTPUT}


# ffmpeg -y -i "$URL" -c:v vp9_vaapi -c:a libopus "$OUTPUT"
# ffmpeg -y -hwaccel vdpau -threads 1 -i "$URL" -vf 'format=nv12,hwupload' -bsf:v vp9_raw_reorder,vp9_superframe -c:v vp9_vaapi output.mp4
#ffmpeg -vaapi_device /dev/dri/renderD128 -i "$URL" -vf 'format=nv12,hwupload' -c:v vp9_vaapi -global_quality 70 -bf 2 -bsf:v vp9_raw_reorder,vp9_superframe -an -sn output.webm
# ffmpeg -y -hwaccel vaapi -i "$URL" -c:v h264_vaapi out.mkv

# https://gist.github.com/Brainiarc7/95c9338a737aa36d9bb2931bed379219
# ffmpeg -loglevel debug -hwaccel vaapi -vaapi_device /dev/dri/renderD128 -i "$URL" \
#  -vf 'format=nv12,hwupload' -map 0:0 -map 0:1 -threads 8 -aspect 16:9 \
#   -y -f matroska -acodec copy -b:v 12500k -vcodec h264_vaapi "$DEFAULTOUTPUT"

# 2 pass
# ffpb -hide_banner -y -i "$URL" -c:v libvpx-vp9 -crf 30 -b:v 1000k -pass 1 -an -f null /dev/null && \
# ffpb -hide_banner -y -i "$URL" -c:v libvpx-vp9 -c:a libopus -crf 30 -pass 2 -b:v 1000K "$OUTPUT"
# rm ffmpeg2pass-0.log

# 1 pass
# ref: https://write.corbpie.com/mp4-to-vp9-webm-encoding-with-ffmpeg/
ffpb -hide_banner -y -i "$URL" -c:v libvpx-vp9 -cpu-used 2 -crf 28 -b:v 1500k \
-threads 8 -row-mt 1 -frame-parallel 1 -tile-columns 6 \
-c:a libopus -ac 2 -b:a 192k \
"$OUTPUT"